@model PaginatedList<eventy.Models.FamilyMember>

@{
    ViewData["Title"] = "Index";
}

<h2>Family Members</h2>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
                <th>
                    Id
                </th>
                <th>
                    Family Id
                </th>
                <th>
                    Full Name
                </th>
                <th>
                    Gender
                </th>
                <th>
                    Birthday (dd/mm/yyyy)
                </th>
                <th>
                    Head of Family
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @if (item.FamilyId == 0)
                {
                    @:-
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.FamilyId)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @item.Birthday.ToString("dd/MM/yyyy")
            </td>
            <td>
                @if (item.IsHeadOfFamily)
                {
                    @:Yes

                }
                else
                {
                    @:No

                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Add to Family</a>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>