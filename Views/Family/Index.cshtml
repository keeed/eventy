@model PaginatedList<eventy.Models.Family>

@{
    ViewData["Title"] = "Families";
}

<h2>Families</h2>

<p>
    <a asp-action="Create">Add New Family</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Old Id: <input type="text" name="SearchStringOldId" value="@ViewData["currentFilterOldId"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" >
                    Name
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AddressSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" >
                    Address
                </a>  
            </th>
            <th>
                Old Family Id
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OldFamilyNumber)
            </td>
            <td>
                <a class="btn btn-success" asp-action="Register" asp-controller="Event" asp-route-id="@item.Id">Register to Event</a>
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a> 
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var previousDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @previousDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
